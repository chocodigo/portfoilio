import { motion } from "framer-motion";
import { IconProps } from "../types/iconProps";
import { transition } from "../constants/animation";

export const JSIcon: React.FC<IconProps> = ({ isHovered }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      version="1.1"
      width="30"
      height="30.000001907348633"
      viewBox="0 0 30 30.000001907348633"
    >
      <defs>
        <clipPath id="master_svg0_6_0858">
          <rect x="0" y="0" width="30" height="30.000001907348633" rx="0" />
        </clipPath>
      </defs>
      <g clipPath="url(#master_svg0_6_0858)">
        <g>
          <motion.path
            d="M16.668,20.0688L15.5955,21.5538C16.613,22.4613,17.878,22.915,19.3905,22.915C20.5455,22.8875,21.4255,22.5896,22.0305,22.0213C22.6446,21.4438,22.9518,20.7563,22.9518,19.9587C22.9518,19.1796,22.7364,18.5379,22.3055,18.0338C21.8746,17.529600000000002,21.1505,17.1263,20.133,16.823700000000002C19.2896,16.5671,18.6939,16.333399999999997,18.3455,16.122500000000002C17.9971,15.9025,17.823,15.6366,17.823,15.325C17.823,15.0409,17.9651,14.8116,18.249200000000002,14.6375C18.5334,14.4634,18.913899999999998,14.3763,19.3905,14.3763C19.7389,14.3763,20.133,14.445,20.573,14.5825C21.013,14.7016,21.4026,14.8941,21.7418,15.16L22.7043,13.66125C21.8609,12.98287,20.7426,12.64375,19.3492,12.64375C18.350099999999998,12.64375,17.529600000000002,12.90038,16.887999999999998,13.41375C16.228,13.9271,15.898,14.5641,15.898,15.325C15.9071,16.1316,16.173000000000002,16.7596,16.6955,17.2088C17.2271,17.657899999999998,17.9834,18.0246,18.964199999999998,18.308799999999998C19.7801,18.5654,20.3346,18.8221,20.628,19.078699999999998C20.9121,19.3354,21.0542,19.647100000000002,21.0542,20.0138C21.0542,20.3713,20.9121,20.6462,20.628,20.8388C20.3346,21.0404,19.913,21.1413,19.363,21.1413C18.4646,21.1504,17.5664,20.7929,16.668,20.0688ZM9.75506,20.8663C9.48006,20.7013,9.2234,20.4584,8.98506,20.1375L7.69256,21.1963C8.07756,21.8471,8.55424,22.3009,9.12256,22.5575C9.65424,22.7959,10.26381,22.915,10.95131,22.915C11.32715,22.915,11.71674,22.8554,12.12006,22.7362C12.52337,22.6171,12.89462,22.4154,13.23388,22.1313C13.8296,21.6546,14.1414,20.8754,14.1689,19.7938L14.1689,12.80875L12.31256,12.80875L12.31256,19.4362C12.31256,20.0688,12.17049,20.5134,11.88631,20.77C11.60215,21.0175,11.24465,21.1413,10.81381,21.1413C10.401309999999999,21.1413,10.0484,21.0496,9.75506,20.8663ZM3.75,7.5C3.75,5.42894,5.42894,3.75,7.5,3.75L22.5,3.75C24.5711,3.75,26.25,5.42894,26.25,7.5L26.25,22.5C26.25,24.5711,24.5711,26.25,22.5,26.25L7.5,26.25C5.42894,26.25,3.75,24.5711,3.75,22.5L3.75,7.5ZM7.5,6.25C6.8096499999999995,6.25,6.25,6.8096499999999995,6.25,7.5L6.25,22.5C6.25,23.1904,6.8096499999999995,23.75,7.5,23.75L22.5,23.75C23.1904,23.75,23.75,23.1904,23.75,22.5L23.75,7.5C23.75,6.8096499999999995,23.1904,6.25,22.5,6.25L7.5,6.25Z"
            fill="#FFFFFF"
            fillOpacity="1"
            stroke="rgba(255, 255, 255, 0.69)"
            initial={{ pathLength: isHovered ? 0.001 : 1, strokeOpacity: 0 }}
            animate={{
              pathLength: isHovered ? 1 : 0,
              fillOpacity: isHovered ? [0, 1] : 1,
              strokeOpacity: isHovered ? 0 : 1,
            }}
            transition={transition}
          />
        </g>
      </g>
    </svg>
  );
};
