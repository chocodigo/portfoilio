import { motion } from "framer-motion";
import { IconProps } from "../types/iconProps";
import { transition } from "../constants/animation";

export const IonicIcon: React.FC<IconProps> = ({ isHovered }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      version="1.1"
      width="30"
      height="30.000001907348633"
      viewBox="0 0 30 30.000001907348633"
    >
      <defs>
        <clipPath id="master_svg0_6_0983">
          <rect x="0" y="0" width="30" height="30.000001907348633" rx="0" />
        </clipPath>
      </defs>
      <g clipPath="url(#master_svg0_6_0983)">
        <g>
          <g>
            <motion.path
              d="M15.0178,0.000138937C17.4526,0.000138937,19.7453,0.568999,21.8957,1.6709L22.1801,1.81308L21.9313,2.00857C21.327,2.48843,20.8472,3.11047,20.545,3.82137L20.4562,4.01687L20.2784,3.928C18.6256,3.14601,16.8661,2.73725,15.0355,2.73725C8.26422,2.73725,2.77251,8.24673,2.77251,15.0003C2.77251,21.7538,8.24645,27.2633,15.0178,27.2633C21.7891,27.2633,27.2808,21.7538,27.2808,15.0003C27.2808,13.383,26.9787,11.8012,26.3389,10.3083L26.25,10.1128L26.4455,10.024C27.1742,9.75739,27.814,9.31308,28.3294,8.74436L28.5249,8.49554L28.6493,8.7799C29.5557,10.7526,30,12.8498,30,14.9647C30,23.229,23.2642,29.9647,15,29.9647C6.73578,29.9647,0,23.229,0,14.9647C0,6.70052,6.73578,-0.0352661,15.0178,0.000138937ZM15.0178,8.17564C18.7678,8.17564,21.8424,11.2325,21.8602,15.0181C21.8602,18.8036,18.8033,21.8605,15.0178,21.8605C11.2322,21.8605,8.17536,18.8036,8.17536,15.0181C8.17536,11.2325,11.25,8.17564,15.0178,8.17564ZM24.8104,2.52398C26.538,2.52398,27.9384,3.92441,27.9384,5.65194C27.9384,7.37946,26.538,8.7799,24.8104,8.7799C23.0829,8.7799,21.6825,7.37946,21.6825,5.65194C21.6825,3.92441,23.0829,2.52398,24.8104,2.52398Z"
              fill="#FFFFFF"
              fillOpacity="1"
              stroke="rgba(255, 255, 255, 0.69)"
              initial={{ pathLength: isHovered ? 0.001 : 1 }}
              animate={{
                pathLength: isHovered ? 1 : 0,
                fillOpacity: isHovered ? [0, 1] : 1,
                strokeOpacity: isHovered ? 0 : 1,
              }}
              transition={transition}
            />
          </g>
        </g>
      </g>
    </svg>
  );
};
